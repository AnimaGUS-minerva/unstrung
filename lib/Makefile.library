# -*- makefile -*-
MANSRCDIR=${UNSTRUNG_SRCDIR}/lib/libopenswan

RANLIB?=ranlib
OSDEP?=$(shell uname -s | tr 'A-Z' 'a-z')

WCASTQUAL?=-Wcast-qual

# Original flags
INCLUDES+=-I. -I${UNSTRUNG_SRCDIR}
INCLUDES+= -I${UNSTRUNG_SRCDIR}/include
CFLAGS+=${PORTINCLUDE} ${INCLUDES} ${CROSSFLAGS}
CXXFLAGS+=${PORTINCLUDE} ${INCLUDES} ${CROSSFLAGS}
CXXFLAGS+=-fPIC

CFLAGS+=-DDEBUG
CFLAGS+=-fPIC
CFLAGS+= $(USERCOMPILE)
#CFLAGS+= -Wconversion
#CFLAGS+= -Wmissing-prototypes
CFLAGS+= -Wpointer-arith
CFLAGS+= ${WCASTQUAL}
#CFLAGS+= -Wmissing-declarations
CFLAGS+= -Wstrict-prototypes
#CFLAGS+= -pedantic
#CFLAGS+= -W
#CFLAGS+= -Wwrite-strings
CFLAGS+= -Wbad-function-cast
CFLAGS+= ${CROSSFLAGS}

ARFLAGS=crvs
MANS=

LIBDIR?=${LIBRARY}

.PHONY:	all install clean l t lt tar check depend checkprograms

default:: programs

# we can't do tests with two conditions, but we can concatenate the strings
SHOULDWERESTART=${USE_OBJDIR}$(wildcard ${ONEFILE})
ifeq ($(SHOULDWERESTART),true${ONEFILE})
all programs clean install::
	cd ${UNSTRUNG_SRCDIR} && ${MAKE} -C ${OBJDIRTOP}/lib/lib${LIBDIR} $@
else
all::	$(LIB)
programs:: $(LIB)
clean::	cleanall
install:: doinstall

endif

doinstall:
	@true

$(LIB): $(OBJS)
	$(AR) $(ARFLAGS) $(LIB) $(OBJS)
	${RANLIB} ${LIB}

$(OBJS):	$(HDRS)

cleanall::
	rm -rf ${OBJS}

%.E: ${srcdir}%.cpp
	${CXX} -E -c ${CXXFLAGS} $< >$@

# Gather dependencies caused by explicit #includes within .c files
depend: ${DISTSRC}
	@(ls $(DISTSRC) | egrep '\.c$$|\.cpp$$' | xargs gcc -MM ${PORTINCLUDE} ${INCLUDES} ${ALLFLAGS} ) | sed -e 's,${UNSTRUNG_SRCDIR},../..,g' >Makefile.depend.${OSDEP}

Makefile.depend:
Makefile.depend.${OSDEP}:
Makefile.inc:

-include ${srcdir}Makefile.depend.${OSDEP}



